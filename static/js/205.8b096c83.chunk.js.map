{"version":3,"file":"static/js/205.8b096c83.chunk.js","mappings":"mMAEA,MACMA,EAAW,+BAEjBC,EAAAA,EAAMC,SAASC,OAAS,CACtBC,QAJc,oCAOT,MAAMC,EAAoBC,gBACRL,EAAAA,EAAMM,IAAI,GAADC,OAAIR,EAAQ,yBAC5BS,KAAKC,QAGVC,EAAeL,eAAOM,GAAqB,IAAdC,EAAIC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAI/C,aAHuBb,EAAAA,EAAMM,IAAI,GAADC,OAC3BR,EAAQ,wBAAAQ,OAAuBI,EAAK,UAAAJ,OAASK,KAElCJ,IAClB,EAEaQ,EAAkBX,gBACNL,EAAAA,EAAMM,IAAI,GAADC,OAAIR,EAAQ,WAAAQ,OAAUU,KACtCT,KAGLU,EAAkBb,gBACNL,EAAAA,EAAMM,IAAI,GAADC,OAAIR,EAAQ,WAAAQ,OAAUU,EAAE,cACxCT,KAAKW,KAGVC,EAAkBf,gBACNL,EAAAA,EAAMM,IAAI,GAADC,OAAIR,EAAQ,WAAAQ,OAAUU,EAAE,cACxCT,KAAKC,O,6DC9BvB,MAQA,EAReY,KAEXC,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAACE,EAAAA,GAAQ,CAACC,MAAM,UAAUC,OAAQ,GAAIC,MAAO,M,uGCJnD,MASA,EAToBC,IAA0B,IAAzB,OAAEC,EAAM,QAAEC,GAASF,EACtC,OACEG,EAAAA,EAAAA,MAAA,OAAAR,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAKM,KACLP,EAAAA,EAAAA,KAAA,KAAAC,SAAIO,QCSV,EAZoBF,IAAkB,IAAjB,QAAEI,GAASJ,EAC9B,OACEN,EAAAA,EAAAA,KAAA,OAAAC,SACGS,EAAQC,KAAIC,IAAA,IAAC,GAAEjB,EAAE,OAAEY,EAAM,QAAEC,GAASI,EAAA,OACnCZ,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAACa,EAAW,CAACN,OAAQA,EAAQC,QAASA,KAD/Bb,SCsCjB,EAtCgBmB,KACd,MAAM,QAAEC,IAAYC,EAAAA,EAAAA,MACbN,EAASO,IAAcC,EAAAA,EAAAA,UAAS,KAChCC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,OAC5BG,EAASC,IAAcJ,EAAAA,EAAAA,WAAS,GAkBvC,OAhBAK,EAAAA,EAAAA,YAAU,KACYxC,WAClBuC,GAAW,GACX,IACE,MAAME,QAAmB1B,EAAAA,EAAAA,IAAgBH,GACzCsB,EAAWO,EACb,CAAE,MAAOL,GACPC,EAASD,EAAMM,QACjB,CAAC,QACCH,GAAW,EACb,GAGFI,CAAYX,KACX,CAACA,IAEAM,GACKrB,EAAAA,EAAAA,KAACD,EAAAA,EAAM,KAIdU,EAAAA,EAAAA,MAAA,OAAAR,SAAA,CACGkB,IAASnB,EAAAA,EAAAA,KAAC2B,EAAAA,EAAK,CAACF,QAASN,IACzBT,EAAQlB,OAAS,GAChBQ,EAAAA,EAAAA,KAAC4B,EAAW,CAAClB,QAASA,KAEtBV,EAAAA,EAAAA,KAAA,MAAAC,SAAI,gD,oDCrCZ,MAIA,EAJcK,IAAkB,IAAjB,QAAEmB,GAASnB,EACxB,OAAON,EAAAA,EAAAA,KAAA,KAAAC,SAAIwB,I","sources":["services/api-movies.js","components/Loader/Loader.jsx","components/Reviews/ReviewsItem/ReviewsItem.jsx","components/Reviews/ReviewsList/ReviewsList.jsx","components/Reviews/Reviews.jsx","components/Error/Error.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '7dad0d8643406850cd53b8ced36ef73e';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`${BASE_URL}/trending/movie/day`);\n  return response.data.results;\n};\n\nexport const searchMovies = async (query, page = 1) => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?query=${query}&page=${page}`\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(`${BASE_URL}/movie/${id}`);\n  return response.data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(`${BASE_URL}/movie/${id}/credits`);\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(`${BASE_URL}/movie/${id}/reviews`);\n  return response.data.results;\n};\n","import React from 'react';\nimport { TailSpin } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <div>\n      <TailSpin color=\"#00BFFF\" height={80} width={80} />\n    </div>\n  );\n};\n\nexport default Loader;","import React from 'react';\n\nconst ReviewsItem = ({ author, content }) => {\n  return (\n    <div>\n      <h3>{author}</h3>\n      <p>{content}</p>\n    </div>\n  );\n};\n\nexport default ReviewsItem;\n","import React from 'react';\nimport ReviewsItem from '../ReviewsItem/ReviewsItem';\n\nconst ReviewsList = ({ reviews }) => {\n  return (\n    <div>\n      {reviews.map(({ id, author, content }) => (\n        <li key={id}>\n          <ReviewsItem author={author} content={content} />\n        </li>\n      ))}\n    </div>\n  );\n};\n\nexport default ReviewsList;\n","import React, { useEffect, useState } from 'react';\nimport { getMovieReviews } from 'services/api-movies';\nimport { useParams } from 'react-router-dom';\nimport Error from 'components/Error/Error';\nimport Loader from 'components/Loader/Loader';\nimport ReviewsList from '../Reviews/ReviewsList/ReviewsList';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchReview = async id => {\n      setLoading(true);\n      try {\n        const dataReview = await getMovieReviews(id);\n        setReviews(dataReview);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchReview(movieId);\n  }, [movieId]);\n\n  if (loading) {\n    return <Loader />;\n  }\n\n  return (\n    <div>\n      {error && <Error message={error} />}\n      {reviews.length > 0 ? (\n        <ReviewsList reviews={reviews} />\n      ) : (\n        <h3>We don't have any reviews for this movie</h3>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n","import React from 'react';\n\nconst Error = ({ message }) => {\n  return <p>{message}</p>;\n};\n\nexport default Error;\n"],"names":["BASE_URL","axios","defaults","params","api_key","getTrendingMovies","async","get","concat","data","results","searchMovies","query","page","arguments","length","undefined","getMovieDetails","id","getMovieCredits","cast","getMovieReviews","Loader","_jsx","children","TailSpin","color","height","width","_ref","author","content","_jsxs","reviews","map","_ref2","ReviewsItem","Reviews","movieId","useParams","setReviews","useState","error","setError","loading","setLoading","useEffect","dataReview","message","fetchReview","Error","ReviewsList"],"sourceRoot":""}