{"version":3,"file":"static/js/334.2a069415.chunk.js","mappings":"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","sources":["services/api-movies.js","components/Loader/Loader.jsx","components/App.styled.jsx","components/Error/Error.jsx","components/MovieList/MovieList.jsx","components/MovieForm/MovieForm.jsx","components/LoadMore/LoadMore.styled.jsx","components/LoadMore/LoadMore.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '7dad0d8643406850cd53b8ced36ef73e';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`${BASE_URL}/trending/movie/day`);\n  return response.data.results;\n};\n\nexport const searchMovies = async (query, page = 1) => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?query=${query}&page=${page}`\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(`${BASE_URL}/movie/${id}`);\n  return response.data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(`${BASE_URL}/movie/${id}/credits`);\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(`${BASE_URL}/movie/${id}/reviews`);\n  return response.data.results;\n};\n","import React from 'react';\nimport { TailSpin } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <div>\n      <TailSpin color=\"#00BFFF\" height={80} width={80} />\n    </div>\n  );\n};\n\nexport default Loader;","import styled from '@emotion/styled'\n\nexport const Container = styled.div`\n  max-width: 1100px;\n  padding: 0 16px;\n  margin: 0 auto;\n`;\n\nexport const Section = styled.section`\n  padding: 60px 0;\n  border-bottom: 1px solid #eee;\n  height: 100%;\n`;","import React from 'react';\n\nconst Error = ({ message }) => {\n  return <p>{message}</p>;\n};\n\nexport default Error;\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nconst baseUrlImg = 'https://image.tmdb.org/t/p/w200';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      <ul>\n        {movies.map(({ title, id, poster_path }) => (\n          <li key={id}>\n            <Link to={`${id}`} state={{ from: location }}>\n              <img src={`${baseUrlImg}${poster_path}`} alt={title} />\n              {title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default MovieList;\n","import React from 'react';\n\nconst MovieForm = ({ onQuery, queryParams, setPage }) => {\n  const onSearch = event => {\n    const query = event.target.value;\n    const nextParams = query !== '' ? { query } : {};\n    onQuery(nextParams);\n    setPage(1);\n  };\n\n  return (\n    <label>\n      <input\n        type=\"text\"\n        placeholder=\"Search movies\"\n        value={queryParams}\n        onChange={onSearch}\n      />\n    </label>\n  );\n};\n\nexport default MovieForm;\n","import styled from '@emotion/styled';\n\nexport const ButtonMore = styled.button`\n  margin-left: auto;\n  margin-right: auto;\n  padding: 8px 16px;\n  border-radius: 2px;\n  background-color: #3f51b5;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n\n  &:hover,\n  &:focus {\n    background-color: #303f9f;\n  }\n`;","import React from 'react';\nimport {ButtonMore} from \"./LoadMore.styled\";\n\nconst LoadMore = ({ onClick }) => {\n  return (\n    <ButtonMore type=\"button\" onClick={onClick}>\n      Load more\n    </ButtonMore>\n  );\n};\n\nexport default LoadMore;","import Error from 'components/Error/Error';\nimport Loader from 'components/Loader/Loader';\nimport MovieList from 'components/MovieList/MovieList';\nimport MovieForm from 'components/MovieForm/MovieForm';\nimport LoadMore from 'components/LoadMore/LoadMore';\nimport { useEffect, useState } from 'react';\nimport { searchMovies } from 'services/api-movies';\nimport { useSearchParams } from 'react-router-dom';\nimport { Container, Section } from \"../components/App.styled\";\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [page, setPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [loadMore, setLoadMore] = useState(false);\n  const queryParams = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!queryParams) return setMovies([]);\n    const fetchMovies = async (query, page) => {\n      setLoading(true);\n      try {\n        const { results, total_result, total_pages } = await searchMovies(\n          query,\n          page\n        );\n\n        if (page === 1) {\n          setMovies(results);\n        } else {\n          setMovies(prevMovies => [...prevMovies, ...results]);\n\n          setLoadMore(total_pages < Math.ceil(total_result / 20));\n        }\n        setLoadMore(true);\n        setLoading(false);\n      } catch (error) {\n        setError(true);\n        console.log(error.message);\n        setLoading(true);\n      }\n    };\n\n    fetchMovies(queryParams, page);\n  }, [page, queryParams]); // searchQuery\n\n  useEffect(() => {\n    if (!queryParams) return setLoadMore(false);\n  }, [queryParams]);\n\n  const onQuery = query => {\n    setSearchParams(query);\n  };\n\n  const onClick = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  return (\n    \n    <Container>\n      <Section>\n        <h1>Search Movies</h1>\n        <MovieForm\n          onQuery={onQuery}\n          queryParams={queryParams}\n          setPage={setPage}\n        />\n      \n      {loading ? (\n        <Loader />\n      ) : (\n        <>\n          {movies.length !== 0 && <h2>Movies: '{queryParams}'</h2>}\n          <MovieList movies={movies} />\n          {loadMore && <LoadMore onClick={onClick} />}\n        </>\n      )}\n      {error && <Error />}\n      </Section>\n    </Container>\n  );\n};\n\nexport default Movies;\n"],"names":["BASE_URL","axios","defaults","params","api_key","getTrendingMovies","async","get","concat","data","results","searchMovies","query","page","arguments","length","undefined","getMovieDetails","id","getMovieCredits","cast","getMovieReviews","Loader","_jsx","children","TailSpin","color","height","width","Container","styled","div","_templateObject","_taggedTemplateLiteral","Section","section","_templateObject2","_ref","message","movies","location","useLocation","_Fragment","map","_ref2","title","poster_path","_jsxs","Link","to","state","from","src","alt","onQuery","queryParams","setPage","type","placeholder","value","onChange","event","target","ButtonMore","button","onClick","Movies","_searchParams$get","setMovies","useState","searchParams","setSearchParams","useSearchParams","loading","setLoading","error","setError","loadMore","setLoadMore","useEffect","total_result","total_pages","prevMovies","Math","ceil","console","log","fetchMovies","MovieForm","MovieList","LoadMore","prevPage","Error"],"sourceRoot":""}