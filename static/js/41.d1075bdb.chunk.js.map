{"version":3,"file":"static/js/41.d1075bdb.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","components/MovieForm/MovieForm.styled.jsx","components/MovieForm/MovieForm.jsx","components/LoadMore/LoadMore.styled.jsx","components/LoadMore/LoadMore.jsx","pages/Movies.jsx","services/api-movies.js","components/Loader/Loader.jsx","components/App.styled.jsx","components/Error/Error.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 24px;\n  padding: 0;\n  margin: 0;\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  width: 180px;\n  border-radius: 8px;\n  overflow: hidden;\n  background: #fff;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.08);\n  transition: transform 0.2s;\n  &:hover,\n  &:focus-within {\n    transform: translateY(-4px) scale(1.03);\n    box-shadow: 0 4px 16px rgba(0,0,0,0.12);\n  }\n`;\n\nexport const StyledLink = styled.a`\n  display: block;\n  color: inherit;\n  text-decoration: none;\n  padding: 8px;\n`;\n\nexport const Poster = styled.img`\n  width: 100%;\n  height: 270px;\n  object-fit: cover;\n  border-radius: 4px;\n  display: block;\n  margin: 0 auto 8px auto;\n`;\n\nexport const Title = styled.span`\n  display: block;\n  text-align: center;\n  font-size: 1.05rem;\n  font-weight: 600;\n  margin-bottom: 4px;\n`;","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { List, Item, StyledLink, Poster, Title } from './MovieList.styled';\n\nconst baseUrlImg = 'https://image.tmdb.org/t/p/w200';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      <List>\n        {movies.map(({ title, id, poster_path }) => (\n          <Item key={id}>\n            <StyledLink>\n              <Link to={`${id}`} state={{ from: location }}>\n                <Poster src={`${baseUrlImg}${poster_path}`} alt={title} />\n                <Title>{title}</Title>\n              </Link>\n            </StyledLink>\n          </Item>\n        ))}\n      </List>\n    </>\n  );\n};\n\nexport default MovieList;\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: flex;\n  justify-content: center;\n  margin: 24px 0;\n`;\n\nexport const Input = styled.input`\n  width: 320px;\n  padding: 10px 16px;\n  border: 1px solid #bdbdbd;\n  border-radius: 6px;\n  font-size: 1rem;\n  outline: none;\n  transition: border 0.2s;\n\n  &:focus {\n    border-color: #1976d2;\n  }\n`;","import React from 'react';\nimport { Label, Input } from \"./MovieForm.styled\";\n\nconst MovieForm = ({ onQuery, queryParams, setPage }) => {\n  const onSearch = event => {\n    const query = event.target.value;\n    const nextParams = query !== '' ? { query } : {};\n    onQuery(nextParams);\n    setPage(1);\n  };\n\n  return (\n    <Label>\n      <Input\n        type=\"text\"\n        placeholder=\"Search movies\"\n        value={queryParams}\n        onChange={onSearch}\n      />\n    </Label>\n  );\n};\n\nexport default MovieForm;\n","import styled from '@emotion/styled';\n\nexport const LoadMoreButton = styled.button`\nmargin-top: 24px;\n  margin-left: auto;\n  margin-right: auto;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: block;\n  color: #fff;\n  background-color: #1976d2;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  padding: 12px 24px;\n  border-radius: 6px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n\n  &:hover,\n  &:focus {\n    background-color: #303f9f;\n  }\n`;\n","import React from 'react';\nimport {LoadMoreButton} from \"./LoadMore.styled\";\n\nconst LoadMore = ({ onClick }) => {\n  return (\n    <LoadMoreButton type=\"button\" onClick={onClick}>\n      Load more\n    </LoadMoreButton>\n  );\n};\n\nexport default LoadMore;","import Error from 'components/Error/Error';\nimport Loader from 'components/Loader/Loader';\nimport MovieList from 'components/MovieList/MovieList';\nimport MovieForm from 'components/MovieForm/MovieForm';\nimport LoadMore from 'components/LoadMore/LoadMore';\nimport { useEffect, useState } from 'react';\nimport { searchMovies } from 'services/api-movies';\nimport { useSearchParams } from 'react-router-dom';\nimport { Container, Section } from \"../components/App.styled\";\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [page, setPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [loadMore, setLoadMore] = useState(false);\n  const queryParams = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!queryParams) return setMovies([]);\n    const fetchMovies = async (query, page) => {\n      setLoading(true);\n      try {\n        const { results, total_result, total_pages } = await searchMovies(\n          query,\n          page\n        );\n\n        if (page === 1) {\n          setMovies(results);\n        } else {\n          setMovies(prevMovies => [...prevMovies, ...results]);\n\n          setLoadMore(total_pages < Math.ceil(total_result / 20));\n        }\n        setLoadMore(true);\n        setLoading(false);\n      } catch (error) {\n        setError(true);\n        console.log(error.message);\n        setLoading(true);\n      }\n    };\n\n    fetchMovies(queryParams, page);\n  }, [page, queryParams]); // searchQuery\n\n  useEffect(() => {\n    if (!queryParams) return setLoadMore(false);\n  }, [queryParams]);\n\n  const onQuery = query => {\n    setSearchParams(query);\n  };\n\n  const onClick = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  return (\n    \n    <Container>\n      <Section>\n        <h1>Search Movies</h1>\n        <MovieForm\n          onQuery={onQuery}\n          queryParams={queryParams}\n          setPage={setPage}\n        />\n      \n      {loading ? (\n        <Loader />\n      ) : (\n        <>\n          {movies.length !== 0 && <h2>Movies: '{queryParams}'</h2>}\n          <MovieList movies={movies} />\n          {loadMore && <LoadMore onClick={onClick} />}\n        </>\n      )}\n      {error && <Error />}\n      </Section>\n    </Container>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '7dad0d8643406850cd53b8ced36ef73e';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`${BASE_URL}/trending/movie/day`);\n  return response.data.results;\n};\n\nexport const searchMovies = async (query, page = 1) => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?query=${query}&page=${page}`\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(`${BASE_URL}/movie/${id}`);\n  return response.data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(`${BASE_URL}/movie/${id}/credits`);\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(`${BASE_URL}/movie/${id}/reviews`);\n  return response.data.results;\n};\n","import React from 'react';\nimport { TailSpin } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <div>\n      <TailSpin color=\"#00BFFF\" height={80} width={80} />\n    </div>\n  );\n};\n\nexport default Loader;","import styled from '@emotion/styled'\n\nexport const Container = styled.div`\n  max-width: 1100px;\n  padding: 0 16px;\n  margin: 0 auto;\n`;\n\nexport const Section = styled.section`\n  padding: 60px 0;\n  border-bottom: 1px solid #eee;\n  height: 100%;\n`;","import React from 'react';\n\nconst Error = ({ message }) => {\n  return <p>{message}</p>;\n};\n\nexport default Error;\n"],"names":["List","styled","ul","_templateObject","_taggedTemplateLiteral","Item","li","_templateObject2","StyledLink","a","_templateObject3","Poster","img","_templateObject4","Title","span","_templateObject5","_ref","movies","location","useLocation","_jsx","_Fragment","children","map","_ref2","title","id","poster_path","_jsxs","Link","to","concat","state","from","src","alt","Label","label","Input","input","onQuery","queryParams","setPage","type","placeholder","value","onChange","event","query","target","LoadMoreButton","button","onClick","Movies","_searchParams$get","setMovies","useState","searchParams","setSearchParams","useSearchParams","page","loading","setLoading","error","setError","loadMore","setLoadMore","get","useEffect","async","results","total_result","total_pages","searchMovies","prevMovies","Math","ceil","console","log","message","fetchMovies","Container","Section","MovieForm","Loader","length","MovieList","LoadMore","prevPage","Error","BASE_URL","axios","defaults","params","api_key","getTrendingMovies","data","arguments","undefined","getMovieDetails","getMovieCredits","cast","getMovieReviews","TailSpin","color","height","width","div","section"],"sourceRoot":""}